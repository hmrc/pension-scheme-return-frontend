# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test routes in the production environment.
# If you need test routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes" 

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/". This is because NGINX is blocking every uri containing the string "test-only" in production.
# Failing to follow this rule may result in test routes deployed in production.

# Add all the application routes to the prod.routes file
->         /                                                                                       prod.Routes

GET        /pension-scheme-return/test-only/:srn/add-member-details/:num                           controllers.testonly.MemberDetailsMongoController.addMemberDetails(srn: Srn, num: Max300)
GET        /pension-scheme-return/test-only/:srn/add-loan-details/:num                             controllers.testonly.LoanDetailsMongoController.addLoanDetails(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-land-or-property/:num                         controllers.testonly.LandOrPropertyMongoController.addTestData(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-land-or-property-disposals/:index/:num        controllers.testonly.LandOrPropertyDisposalMongoController.addTestData(srn: Srn, index: Max5000, num: Max50)
GET        /pension-scheme-return/test-only/:srn/add-borrow-details/:num                           controllers.testonly.BorrowingInstancesMongoController.addBorrowDetails(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-employer-contributions/:index/:num            controllers.testonly.EmployerContributionsMongoController.addEmployerContributions(srn: Srn, index: Max300, num: Max50)
GET        /pension-scheme-return/test-only/:srn/add-transfers-in/:index/:num                      controllers.testonly.TransferInMongoController.addTestData(srn: Srn, index: Max300, num: Max5)
GET        /pension-scheme-return/test-only/:srn/add-shares/:num                                   controllers.testonly.SharesMongoController.addTestData(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-shares-disposals/:index/:num                  controllers.testonly.SharesDisposalMongoController.addTestData(srn: Srn, index: Max5000, num: Max50)
GET        /pension-scheme-return/test-only/:srn/add-bonds/:num                                    controllers.testonly.BondsMongoController.addTestData(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-bonds-disposal/:index/:num                    controllers.testonly.BondsDisposalMongoController.addTestData(srn: Srn, index: Max5000, num: Max50)
GET        /pension-scheme-return/test-only/:srn/add-other-assets/:num                             controllers.testonly.OtherAssetsMongoController.addTestData(srn: Srn, num: Max5000)
GET        /pension-scheme-return/test-only/:srn/add-assets-disposals/:index/:num                  controllers.testonly.AssetsDisposalMongoController.addTestData(srn: Srn, index: Max5000, num: Max50)
GET        /pension-scheme-return/test-only/:srn/print-user-answers                                controllers.testonly.PrintsUserAnswersController.printUserAnswers(srn: Srn, key: Option[String] ?= None)
